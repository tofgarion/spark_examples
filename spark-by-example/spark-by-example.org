#+TITLE: SPARK by example

* Non-mutating algorithms (GPL2016)
  :PROPERTIES:
  :SPEC_FILE: chap3.ads
  :IMPL_FILE: chap3.adb
  :COLUMNS:  %27ITEM(Function to prove) %11Status %6Level %15POS_IN_SPEC(Where)
  :Status_ALL: "In progress" "Not started yet" "Finished" ""
  :Level_ALL: "0" "1" "2" "3" "4"
  :END:

** Equal
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:27
   :Status:   Finished
   :Level:    2
   :END:

   - level 0: invariant preservation + postcondition not proved
   - level 1: postcondition not proved
** Mismatch
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:38
   :Status:   Finished
   :Level:    2
   :END:

   - level 0: invariant preservation + postcondition not proved
   - level 1: postcondition not proved
   - refactoring: level 2 still needed
** Find
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:67
   :Status:   Finished
   :Level:    1
   :END:

   - level 0: invariant preservation + postcondition not proved
   - level 1: postcondition not proved
   - refactoring: level 1!
** Find_First_Of
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:98
   :Status:   Finished
   :Level:    2
   :END:

   - level 0: invariant preservation + postcondition not proved
   - level 1: postcondition not proved
   - refactoring: still level 2 needed
** Adjacent_First (new)
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:128
   :Status:   Finished
   :Level:    2
   :END:

   - level 0: invariant preservation + contract case not proved
   - level 1: idem
** Search (new)
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:162
   :Status:   Finished
   :Level:    2
   :END:

   Cannot use Contract Cases with array slice. Bug reported and
   corrected in SPARK development version
   (cf. https://gt3-prod-2.adacore.com/#/tickets/P630-039).

   Level 2 is sufficient to prove all VCs.

*** DONE investigate function proof for case when B is not a subsequence of A
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2016-09-27 Tue 14:17]
    :END:

    SPARK cannot prove this part of the postcondition (cf. line 171 of
    chap3.ads). Counterexample given : Result = 0 and Size_A = 1
    (A'First = 1, A'Last = 1).

    It seems to be the same problem with array slices in the for
    expression. Maybe a bug report should be produced?

    Strange fact also : when using slices, a precondition on the
    length of A must be used (~A'Length < Integer'Last~ for instance).

** Count (new)
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:224
   :Status:   Finished
   :Level:    1
   :END:

   - no particular problem using axiomatic definition of Occ (see
     http://docs.adacore.com/spark2014-docs/html/ug/gnatprove_by_example/manual_proof.html#manual-proof-using-ghost-code)
   - not using a Size parameter seems to make the proof easier
   - functions Occ_Def and Occ are also proved
   - easier than ACSL, no need to prove lemmas?

**** TODO compare ACSL lemmas and SPARK ghost functions
     :PROPERTIES:
     :ID:       aaa94786-47f6-45ae-a2c7-0f2ab753c3e1
     :Effort:   1:00
     :END:

** Equal_Mismatch (new)
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:233
   :Status:   Finished
   :Level:    1
   :END:

   A simple reimplementation of Equal using Mismatch as stated in ACSL
   By Example Magnesium edition.
** Search_N (new)
   :PROPERTIES:
   :POS_IN_SPEC: chap3.ads:264
   :Status:   Finished
   :Level:    3
   :END:

   Need to add an assertion after the loop.

* Non-mutating algorithms (SPARK Pro 2017)

* Maximum and minimum algorithms
** Max_Element
** Max_Seq
** Min_Element

* Binary search algorithms
** Lower_Bound
** Upper_Bound
** Equal_Range
** Binary_Search

* Mutating algorithms
** Swap
** Fill
** Swap_Ranges
** Copy
** Reverse_Copy
** Rotate_Copy (not written)
** Replace_Copy (not written)
** Replace (not written)
** Remove_Copy (not written)

* Numeric algorithms (new)
** Iota (new)
** Accumulate (new)
** Inner_Product (new)
** Partial_Sum (new)
** Adjacent_Differences (new)

* The Stack data type
