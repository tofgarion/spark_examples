SPARK by Example is a project (greatly) inspired by [[https://github.com/fraunhoferfokus/acsl-by-example][ACSL by Example]], a
collection of verified C functions and data types from the C++
standard library. SPARK by Example has two objectives

- implement and verify the same functions as ACSL by Example using
  SPARK 2014 (a programming language based on Ada)
- highlighy differences between verification of C programs and
  verification of SPARK programs

* Tools used

The following tools have been used for this project:

- [[https://www.adacore.com/download][SPARK Discovery 2017]]
- [[http://cvc4.cs.stanford.edu/web/][CVC4 1.5]]
- [[https://github.com/Z3Prover/z3/releases][Z3 4.6.0]]

* Content of each directory

Each directory corresponds to a chapter of ACSL by Example. For each
algorithm ~Algo~ to be proved, you will find the specification of
~Algo~ in the ~algo_p.ads~ file and its implementation if the
~algo_p.adb~ file.

Ghost functions that may be used in several algorithms are grouped in
the ~spec~ directory at the root of the project.

A makefile is provided for each chapter with some default values for
provers timeouts, levels of proof etc. These default values are
sufficient to prove the corresponding algorithms with the previous
tools on a machine equipped with an Intel Core i7-4810MQ CPU.

* Table of contents

  1. [[./non-mutating/README.org][non mutating algorithms]]

* References

  - [[http://docs.adacore.com/spark2014-docs/html/ug/index.html][SPARK 2014 user guide 19.0]]

# Local Variables:
# ispell-dictionary: "english"
# flyspell-mode: 1
# End:
