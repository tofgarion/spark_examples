** The Swap algorithm

   The ~swap~ algorithm exchanges the contents of two variables. 
   Its signature can be expressed as:
   ~procedure Swap (P : in out T; Q : in out T)~

*** Specification of Swap

    The specification of ~Swap~ is the following:
    #+BEGIN_SRC ada
     procedure Swap (P : in out T; Q : in out T) with
Post => P = Q'Old and then Q = P'Old;
    #+END_SRC

    The postcondition expresses the fact that the two variables have actually been
    exchanged, using the ~'Old~ attribute available in SPARK. This attribute stores the state of the variables *before* the excecution of the procedure.

*** Implementation of Swap

    The implementation of ~Swap~ is:
    #+BEGIN_SRC ada
    procedure Swap (P : in out T; Q : in out T) is
      Save : T := P;
   begin
      P := Q;
      Q := Save;
end Swap;
    #+END_SRC

    A memory variable is used to store the value of ~P~.
    Using ~gnatprove~, everything is proved.
